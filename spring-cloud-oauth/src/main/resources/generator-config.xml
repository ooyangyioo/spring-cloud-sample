<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!-- 引入配置文件 -->
    <properties resource="generator-config.properties"/>
    <!-- 数据库驱动 -->
    <!-- <classPathEntry location="${jdbc.driver.location}" /> -->
    <context id="MySQL" targetRuntime="MyBatis3">
        <!-- 生成的pojo，将实现 Serializable 方法 -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <!-- 给Java模型对象增加了equals和hashCode方法 -->
        <!--<plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>-->
        <!-- 自动生成toString方法 -->
        <!--<plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>-->

        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true"/>
            <!-- 不希望生成的注释中包含时间戳 -->
            <property name="suppressDate" value="false"/>
            <!-- 是否 自动为每一个生成的类创建一个构造方法 -->
            <property name="constructorBased" value="true"/>
        </commentGenerator>

        <!-- 数据库连接 -->
        <jdbcConnection driverClass="${jdbc.driver}" connectionURL="${jdbc.url}" userId="${jdbc.username}"
                        password="${jdbc.password}"/>

        <!-- 指定生成的类型为java类型，避免数据库中number等类型字段 -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 生成model模型，对应的包路径，以及文件存放路径(targetProject)，targetProject可以指定具体的路径,如./src/main/java，
            也可以使用“MAVEN”来自动生成，这样生成的代码会在target/generatord-source目录下 -->
        <javaModelGenerator targetPackage="${model.targetpackage}" targetProject="${model.targetproject}">
            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
            <property name="enableSubPackages" value="true"/>
            <!-- 设置是否在getter方法中，对String类型字段调用trim()方法 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!--对应的xml mapper文件 -->
        <sqlMapGenerator targetPackage="${map.targetpackage}" targetProject="${map.targetproject}">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 对应的dao接口 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="${client.targetpackage}"
                             targetProject="${client.targetproject}">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- 表名对应生成的实体 -->
        <!--        <table tableName="active_user" domainObjectName="ActiveUserEntity"-->
        <!--               enableCountByExample="false"-->
        <!--               enableUpdateByExample="false"-->
        <!--               enableDeleteByExample="false"-->
        <!--               enableSelectByExample="false"-->
        <!--               selectByExampleQueryId="false">-->
        <!--            <property name="useActualColumnNames" value="false"/>-->
        <!--            <columnOverride column="type" property="type" javaType="java.lang.Integer"/>-->
        <!--            <columnOverride column="promotion_type" property="promotionType" javaType="java.lang.Integer"/>-->
        <!--        </table>-->

        <table tableName="sys_user" domainObjectName="SysUser"
               enableCountByExample="false"
               enableUpdateByExample="false"
               enableDeleteByExample="false"
               enableSelectByExample="false"
               selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false"/>
        </table>

    </context>

</generatorConfiguration>